buildscript {
    repositories {
    	jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE')
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
    }
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

mainClassName = "nl.idgis.Application"

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.postgresql:postgresql')
    compile('com.google.code.gson:gson:2.2.4')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    
    compile files('./includes/Terraformer-1.0.jar')
}

jar {
    baseName = 'arcgis-restapi-utrecht'
    version = '0.1.1'
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
	destFile = project.file('build/docker/Dockerfile')
	from 'azul/zulu-openjdk'
	copyFile "build/libs/arcgis-restapi-utrecht-0.1.1.jar", "/app/arcgis-restapi-utrecht-0.1.1.jar"
	copyFile "examples/", "/examples/"
	runCommand 'java -jar -DDB_USER=$DB_USER -DDB_PASSWORD=$DB_PASSWORD /app/arcgis-restapi-utrecht-0.1.1.jar'
}

task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile
	
	inputDir = file("build/docker")
}